import tkinter as tk
from tkinter import ttk

class Person:
    """Base class for common attributes of a person."""
    def __init__(self, name="", address="", contact_details=""):
        self.name = name
        self.address = address
        self.contact_details = contact_details

class Employee(Person):
    """Class to represent an employee."""
    def __init__(self, name="", address="", contact_details="", employee_id=0, department="", job_title="", basic_salary=0.0, manager_id=0):
        super().__init__(name, address, contact_details)
        self.employee_id = employee_id
        self.department = department
        self.job_title = job_title
        self.basic_salary = basic_salary
        self.manager_id = manager_id

class SalesManager(Employee):
    """Class to represent a sales manager."""
    def __init__(self, name="", address="", contact_details="", employee_id=0, basic_salary=0.0, manager_id=0):
        super().__init__(name, address, contact_details, employee_id, "Sales", "Sales Manager", basic_salary, manager_id)

class Salesperson(Employee):
    """Class to represent a salesperson."""
    def __init__(self, name="", address="", contact_details="", employee_id=0, basic_salary=0.0, manager_id=0):
        super().__init__(name, address, contact_details, employee_id, "Sales", "Salesperson", basic_salary, manager_id)

class MarketingManager(Employee):
    """Class to represent a marketing manager."""
    def __init__(self, name="", address="", contact_details="", employee_id=0, basic_salary=0.0, manager_id=0):
        super().__init__(name, address, contact_details, employee_id, "Marketing", "Marketing Manager", basic_salary, manager_id)

class EmployeeForm:
    """Class to represent a GUI form to enter employee details."""
    def __init__(self):
        self.root = tk.Tk()
        self.root.geometry("300x300")
        self.root.title("Employee Form")

        self.name_label = tk.Label(self.root, text="Name:")
        self.name_label.grid(column=0, row=0, sticky=tk.W, padx=5, pady=5)
        self.name_entry = tk.Entry(self.root)
        self.name_entry.grid(column=1, row=0, sticky=tk.E, padx=5, pady=5)

        # Add more entry fields for other employee attributes

        self.submit_button = tk.Button(self.root, text="Submit", command=self.submit)
        self.submit_button.grid(column=1, row=4, sticky=tk.E, padx=5)
        self.root.mainloop()

    def clear_boxes(self):
        """Clear the entry boxes."""
        self.name_entry.delete(0, tk.END)
        # Add similar lines for other entry fields

    def submit(self):
        """Create an Employee object with entered details."""
        name = self.name_entry.get()
        # Get other entered details
        # Create an Employee object
        employee = Employee(name=name)
        # Add the employee to the system
        # Clear the entry boxes
        self.clear_boxes()
        print("Employee added successfully.")

